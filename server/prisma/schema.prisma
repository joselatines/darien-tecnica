// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Espacio {
  id          String   @id @default(cuid())
  name        String   @unique
  location    String
  capacity    Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  imgUrl      String   @default("https://cataas.com/cat")

  reservas Reserva[]
}

model Client {
  id        String    @id @default(cuid())
  email     String    @unique
  reservations  Reserva[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Reserva {
  id              String   @id @default(cuid())
  espacioId       String
  clientId       String
  reservationDate DateTime  // ISO format 2024-01-15
  startTime       String    // Stores "01:30" format
  endTime         String    // Stores "01:30" format
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  status          String    @default("confirmed") // confirmed, pending, cancelled

  // Relationship
  espacio Espacio @relation(fields: [espacioId], references: [id], onDelete: Cascade)
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  // Index for query performance
  @@index([espacioId, reservationDate])
  @@index([clientId, reservationDate])
  @@unique([espacioId, reservationDate, startTime]) // Prevent hour conflicts
}
